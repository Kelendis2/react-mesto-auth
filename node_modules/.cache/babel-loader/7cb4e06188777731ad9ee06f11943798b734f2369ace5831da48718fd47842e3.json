{"ast":null,"code":"import _classCallCheck from\"/Users/kelendis/Documents/GitHab/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/kelendis/Documents/GitHab/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}},{key:\"getProfile\",value:function getProfile(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._getResponseData);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._getResponseData);}},{key:\"editProfile\",value:function editProfile(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me \"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._getResponseData);}},{key:\"editAvatar\",value:function editAvatar(_ref3){var avatar=_ref3.avatar;return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar \"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:avatar})}).then(this._getResponseData);}},{key:\"addCard\",value:function addCard(_ref4){var name=_ref4.name,link=_ref4.link;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._getResponseData);}},{key:\"toggleLike\",value:function toggleLike(cardId,isLiked){if(!isLiked){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._getResponseData);}else{return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}}}]);return Api;}();export{Api as default};export var api=new Api({baseUrl:'https://mesto.nomoreparties.co./v1/cohort-64',headers:{authorization:'4c274032-0b3e-4759-b4b1-a9d64f1dfaf8','Content-Type':'application/json'}});","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","_getResponseData","res","ok","Promise","reject","concat","status","json","getProfile","fetch","then","getInitialCards","editProfile","_ref2","name","about","method","body","JSON","stringify","editAvatar","_ref3","avatar","addCard","_ref4","link","deleteCard","cardId","toggleLike","isLiked","default","api","authorization"],"sources":["/Users/kelendis/Documents/GitHab/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["\nexport default class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n  getProfile(){\n     return fetch(`${this._baseUrl}/users/me`,{\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  };\n  getInitialCards(){\n    return fetch(`${this._baseUrl}/cards`,{\n     headers: this._headers\n   })\n   .then(this._getResponseData)\n };\n editProfile({name,about}){\n  return fetch(`${this._baseUrl}/users/me `,{\n    method: \"PATCH\",\n    headers: this._headers,\n    body: JSON.stringify({\n      name,\n      about\n    })\n  })\n  .then(this._getResponseData)\n }\n editAvatar({avatar}){\n  return fetch(`${this._baseUrl}/users/me/avatar `,{\n    method: \"PATCH\",\n    headers: this._headers,\n    body: JSON.stringify({\n      avatar\n    })\n  })\n  .then(this._getResponseData)\n }\n addCard({name,link}){\n  return fetch(`${this._baseUrl}/cards`,{\n    method: \"POST\",\n    headers: this._headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  })\n  .then(this._getResponseData)\n }\n\n deleteCard(cardId){\n  return fetch(`${this._baseUrl}/cards/${cardId}`,{\n    method: \"DELETE\",\n    headers: this._headers\n  })\n  .then(this._getResponseData)\n }\n\ntoggleLike(cardId, isLiked) {\n  if (!isLiked) {\n    return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  } else {\n    return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  }\n}\n\n\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co./v1/cohort-64',\n  headers: {\n    authorization: '4c274032-0b3e-4759-b4b1-a9d64f1dfaf8',\n    'Content-Type': 'application/json'\n  }\n});\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}