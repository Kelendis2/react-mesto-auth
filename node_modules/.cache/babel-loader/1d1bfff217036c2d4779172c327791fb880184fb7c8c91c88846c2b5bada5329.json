{"ast":null,"code":"export default class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  editProfile(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me `, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponseData);\n  }\n  editAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me/avatar `, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponseData);\n  }\n  addCard(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._getResponseData);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n  toggleLike(cardId, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._getResponseData);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._getResponseData);\n    }\n  }\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co./v1/cohort-64',\n  headers: {\n    authorization: '4c274032-0b3e-4759-b4b1-a9d64f1dfaf8',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_getResponseData","res","ok","Promise","reject","status","json","getProfile","fetch","then","getInitialCards","editProfile","_ref2","name","about","method","body","JSON","stringify","editAvatar","_ref3","avatar","addCard","_ref4","link","deleteCard","cardId","toggleLike","isLiked","api","authorization"],"sources":["/Users/kelendis/Documents/GitHab/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["\nexport default class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n  getProfile(){\n     return fetch(`${this._baseUrl}/users/me`,{\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  };\n  getInitialCards(){\n    return fetch(`${this._baseUrl}/cards`,{\n     headers: this._headers\n   })\n   .then(this._getResponseData)\n };\n editProfile({name,about}){\n  return fetch(`${this._baseUrl}/users/me `,{\n    method: \"PATCH\",\n    headers: this._headers,\n    body: JSON.stringify({\n      name,\n      about\n    })\n  })\n  .then(this._getResponseData)\n }\n editAvatar({avatar}){\n  return fetch(`${this._baseUrl}/users/me/avatar `,{\n    method: \"PATCH\",\n    headers: this._headers,\n    body: JSON.stringify({\n      avatar\n    })\n  })\n  .then(this._getResponseData)\n }\n addCard({name,link}){\n  return fetch(`${this._baseUrl}/cards`,{\n    method: \"POST\",\n    headers: this._headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  })\n  .then(this._getResponseData)\n }\n\n deleteCard(cardId){\n  return fetch(`${this._baseUrl}/cards/${cardId}`,{\n    method: \"DELETE\",\n    headers: this._headers\n  })\n  .then(this._getResponseData)\n }\n\ntoggleLike(cardId, isLiked) {\n  if (!isLiked) {\n    return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  } else {\n    return fetch (`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n  }\n}\n\n\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co./v1/cohort-64',\n  headers: {\n    authorization: '4c274032-0b3e-4759-b4b1-a9d64f1dfaf8',\n    'Content-Type': 'application/json'\n  }\n});\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}