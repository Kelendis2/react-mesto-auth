{"ast":null,"code":"var _jsxFileName = \"/Users/kelendis/Documents/GitHab/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { useEffect, useState } from 'react';\nimport ImagePopup from './ImagePopup.js';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Хуки\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [isProfilePopupOpen, setProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n  const [isTrashPopupOpen, setTrashPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({});\n  //Открытие попапа автара и изменение его.\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n  //Открытие попапа изменения профиля и изменение информации в нем.\n  const handleEditProfileClick = () => {\n    setProfilePopupOpen(true);\n  };\n  const handleUpdateUser = _ref => {\n    let {\n      name,\n      about\n    } = _ref;\n    api.editProfile({\n      name,\n      about\n    }).then(_ref2 => {\n      let {\n        name,\n        about\n      } = _ref2;\n      setCurrentUser({\n        name,\n        about\n      });\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  };\n\n  // Открытие попапа добавления карточки и добавление ее на страницу.\n  const handleAddCardClick = () => {\n    setAddCardPopupOpen(true);\n  };\n  const handleTrashClick = () => {\n    setTrashPopupOpen(true);\n  };\n  const hendleImageClick = card => {\n    setSelectedCard(card);\n    // Закрытие всех попапов\n  };\n\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setAddCardPopupOpen(false);\n    setTrashPopupOpen(false);\n    setSelectedCard({});\n  }\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.toggleLike(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n  // Корзинки\n  function handleCardDelete(card) {\n    // Снова проверяем, наша карточка или нет\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Отправляем запрос в API и удаляем карточку\n    api.deleteCard(card._id, isOwn).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n  // Получение данных с сервера о пользователе\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()]).then(_ref3 => {\n      let [currentUser, card] = _ref3;\n      setCurrentUser(currentUser);\n      setCards(card);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddCardClick,\n          onEditAvatar: handleEditAvatarClick,\n          onOpenTrash: handleTrashClick,\n          onOpenImage: hendleImageClick,\n          onClose: closeAllPopups,\n          cards: cards,\n          currentUser: currentUser,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isAvatarPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddCardPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n          isOpen: isTrashPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8H/kF1B+pRzQ8UAkRusbziO6Bn8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","useEffect","useState","ImagePopup","api","CurrentUserContext","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ConfirmationPopup","jsxDEV","_jsxDEV","App","_s","isAvatarPopupOpen","setAvatarPopupOpen","isProfilePopupOpen","setProfilePopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","isTrashPopupOpen","setTrashPopupOpen","cards","setCards","currentUser","setCurrentUser","selectedCard","setSelectedCard","handleEditAvatarClick","handleEditProfileClick","handleUpdateUser","_ref","name","about","editProfile","then","_ref2","closeAllPopups","catch","err","console","log","handleAddCardClick","handleTrashClick","hendleImageClick","card","handleCardLike","isLiked","likes","some","i","_id","toggleLike","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","Promise","all","getProfile","getInitialCards","_ref3","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onOpenTrash","onOpenImage","onClose","onCardLike","onCardDelete","isOpen","onUpdateUser","_c","$RefreshReg$"],"sources":["/Users/kelendis/Documents/GitHab/mesto-react/src/components/App.js"],"sourcesContent":["import '../index.css';\nimport Header from './Header.js'\nimport Main from './Main.js'\nimport Footer from './Footer.js'\nimport { useEffect, useState } from 'react';\nimport ImagePopup from './ImagePopup.js';\n\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ConfirmationPopup from './ConfirmationPopup';\n\n\n\nfunction App() {\n  //Хуки\n  const  [isAvatarPopupOpen,setAvatarPopupOpen] = useState(false)\n  const  [isProfilePopupOpen,setProfilePopupOpen] = useState(false)\n  const  [isAddCardPopupOpen,setAddCardPopupOpen] = useState(false)\n  const  [isTrashPopupOpen,setTrashPopupOpen] = useState(false)\n  const  [cards,setCards] = useState([])\n  const  [currentUser,setCurrentUser] = useState([])\n  const  [selectedCard, setSelectedCard] = useState({});\n//Открытие попапа автара и изменение его.\n  const handleEditAvatarClick =()=> {\n    setAvatarPopupOpen(true)\n    }\n//Открытие попапа изменения профиля и изменение информации в нем.\n    const handleEditProfileClick = () => {\n      setProfilePopupOpen(true)\n    }\n\n    const handleUpdateUser = ({name,about})=>{\n      api.editProfile({name,about})\n        .then(({name,about})=>{\n          setCurrentUser({name,about});\n          closeAllPopups();\n         })\n        .catch((err) => console.log(err));\n    }\n\n// Открытие попапа добавления карточки и добавление ее на страницу.\n    const handleAddCardClick =() => {\n      setAddCardPopupOpen(true)\n    }\n    const handleTrashClick = () =>{\n      setTrashPopupOpen(true)\n    }\n    const hendleImageClick = (card)=>{\n      setSelectedCard(card);\n// Закрытие всех попапов\n    }\n    function closeAllPopups() {\n      setAvatarPopupOpen(false)\n      setProfilePopupOpen(false)\n      setAddCardPopupOpen(false)\n      setTrashPopupOpen(false)\n      setSelectedCard({})\n    }\n// Лайки\n    function handleCardLike(card) {\n      // Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n      // Отправляем запрос в API и получаем обновлённые данные карточки\n      api.toggleLike(card._id, isLiked)\n      .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => console.log(err));\n  }\n// Корзинки\n  function handleCardDelete(card) {\n    // Снова проверяем, наша карточка или нет\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Отправляем запрос в API и удаляем карточку\n    api.deleteCard(card._id, isOwn)\n    .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((err) => console.log(err));\n}\n// Получение данных с сервера о пользователе\n    useEffect(()=>{\n      Promise.all([api.getProfile(),api.getInitialCards()])\n      .then(([currentUser,card])=>{\n        setCurrentUser(currentUser)\n        setCards(card);\n      }\n      )\n      .catch((err) => console.log(err))\n    },[])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n\n    <div className=\"App\">\n      <div className=\"page\">\n        <Header />\n        <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddCardClick}\n        onEditAvatar={handleEditAvatarClick}\n        onOpenTrash = {handleTrashClick}\n        onOpenImage ={hendleImageClick}\n        onClose ={closeAllPopups}\n        cards={cards}\n        currentUser={currentUser}\n        onCardLike={handleCardLike}\n        onCardDelete ={handleCardDelete}/>\n\n        <Footer />\n\n         <EditProfilePopup\n         isOpen={isProfilePopupOpen}\n         onClose ={closeAllPopups}\n         onUpdateUser = {handleUpdateUser}/>\n\n         <EditAvatarPopup\n         isOpen={isAvatarPopupOpen}\n         onClose ={closeAllPopups}/>\n\n        < AddPlacePopup\n        isOpen={isAddCardPopupOpen}\n        onClose ={closeAllPopups}/>\n\n        <ConfirmationPopup\n        isOpen={isTrashPopupOpen}\n        onClose ={closeAllPopups} />\n\n         <ImagePopup\n         card={selectedCard}\n         onClose={closeAllPopups}/>\n\n   </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}