{"ast":null,"code":"var _jsxFileName = \"/Users/kelendis/Documents/GitHab/mesto-react/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAvatarPopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar,\n    isLoading\n  } = _ref;\n  const [isValidity, setIsValidity] = useState(true);\n  const inputRef = useRef(0);\n  useEffect(() => {\n    isOpen && (inputRef.current.value = \"\");\n  }, [isOpen]);\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    });\n  }\n  function handleChange() {\n    setIsValidity(inputRef.current.checkValidity());\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"avatar\",\n    title: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonText: isLoading ? \"Сохранение...\" : \"Сохранить\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input form__input_type_avatar\" ${!isValidity}`,\n        type: \"url\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        name: \"avatar\",\n        id: \"avatar\",\n        required: true,\n        ref: inputRef,\n        onChange: evt => handleChange(evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form__input-error\",\n        id: \"avatar-error\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"OAYNiy9RsQdSek1fkMPpJSgqAqo=\");\n_c = EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","useRef","useState","useEffect","PopupWithForm","jsxDEV","_jsxDEV","EditAvatarPopup","_ref","_s","isOpen","onClose","onUpdateAvatar","isLoading","isValidity","setIsValidity","inputRef","current","value","handleSubmit","evt","preventDefault","avatar","handleChange","checkValidity","name","title","buttonText","onSubmit","children","className","type","placeholder","id","required","ref","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kelendis/Documents/GitHab/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  isLoading,\n}) {\n  const [isValidity, setIsValidity] = useState(true);\n  const inputRef = useRef(0);\n\n  useEffect(() => {\n    isOpen && (inputRef.current.value = \"\");\n  }, [isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  }\n\n  function handleChange() {\n    setIsValidity(inputRef.current.checkValidity());\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Изменить аватар\"\n      buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          className={`form__input form__input_type_avatar\" ${!isValidity}`}\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"avatar\"\n          id=\"avatar\"\n          required\n          ref={inputRef}\n          onChange={(evt) => handleChange(evt.target.value)}\n        />\n        <span className=\"form__input-error\" id=\"avatar-error\">\n          {\" \"}\n        </span>\n      </label>\n    </PopupWithForm>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAKpC;EAAAC,EAAA;EAAA,IALqC;IACtCC,MAAM;IACNC,OAAO;IACPC,cAAc;IACdC;EACF,CAAC,GAAAL,IAAA;EACC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMc,QAAQ,GAAGf,MAAM,CAAC,CAAC,CAAC;EAE1BE,SAAS,CAAC,MAAM;IACdO,MAAM,KAAKM,QAAQ,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE,CAAC;EACzC,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,SAASS,YAAYA,CAACC,GAAG,EAAE;IACzBA,GAAG,CAACC,cAAc,CAAC,CAAC;IACpBT,cAAc,CAAC;MACbU,MAAM,EAAEN,QAAQ,CAACC,OAAO,CAACC;IAC3B,CAAC,CAAC;EACJ;EAEA,SAASK,YAAYA,CAAA,EAAG;IACtBR,aAAa,CAACC,QAAQ,CAACC,OAAO,CAACO,aAAa,CAAC,CAAC,CAAC;EACjD;EAEA,oBACElB,OAAA,CAACF,aAAa;IACZqB,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAC,uFAAiB;IACvBC,UAAU,EAAEd,SAAS,GAAG,eAAe,GAAG,WAAY;IACtDH,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEA,OAAQ;IACjBiB,QAAQ,EAAET,YAAa;IAAAU,QAAA,eAEvBvB,OAAA;MAAOwB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC5BvB,OAAA;QACEwB,SAAS,EAAG,wCAAuC,CAAChB,UAAW,EAAE;QACjEiB,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,oGAAoB;QAChCP,IAAI,EAAC,QAAQ;QACbQ,EAAE,EAAC,QAAQ;QACXC,QAAQ;QACRC,GAAG,EAAEnB,QAAS;QACdoB,QAAQ,EAAGhB,GAAG,IAAKG,YAAY,CAACH,GAAG,CAACiB,MAAM,CAACnB,KAAK;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFnC,OAAA;QAAMwB,SAAS,EAAC,mBAAmB;QAACG,EAAE,EAAC,cAAc;QAAAJ,QAAA,EAClD;MAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAAChC,EAAA,CAlDuBF,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}