{"ast":null,"code":"var _jsxFileName = \"/Users/kelendis/Documents/GitHab/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport \"../index.css\";\nimport { useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport { api } from \"../utils/Api.js\";\nimport * as auth from \"../utils/auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport PageError from \"./PageNotFound\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Хуки\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [isProfilePopupOpen, setProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n  const [isTrashPopupOpen, setTrashPopupOpen] = useState(false);\n  const [isError, setError] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState({\n    email: \"\"\n  });\n  const navigate = useNavigate();\n\n  // Получение данных с сервера о пользователе\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()]).then(_ref => {\n      let [currentUser, card] = _ref;\n      setCurrentUser(currentUser);\n      setCards(card);\n    }).catch(err => console.log(err));\n  }, []);\n\n  //Открытие попапа автара и изменение его.\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n  const handleUpdateAvatar = value => {\n    setIsLoading(true);\n    api.editAvatar(value).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  //Открытие попапа изменения профиля и изменение информации в нем.\n  const handleEditProfileClick = () => {\n    setProfilePopupOpen(true);\n  };\n  const handleUpdateUser = value => {\n    setIsLoading(true);\n    api.editProfile(value).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // Открытие попапа добавления карточки и добавление ее на страницу.\n  const handleAddCardClick = () => {\n    setAddCardPopupOpen(true);\n  };\n  const handleTrashClick = () => {\n    setTrashPopupOpen(true);\n  };\n  const hendleImageClick = card => {\n    setSelectedCard(card);\n  };\n  const handleAddCard = value => {\n    setIsLoading(true);\n    api.addCard(value).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // Попап регистрации\n  function handleInfoTooltipPositive() {\n    setIsInfoToolTipOpen(true);\n  }\n  function handleInfoTooltipNegative(_ref2) {\n    let {\n      error,\n      message\n    } = _ref2;\n    setIsInfoToolTipOpen(true);\n    setError(message || error);\n  }\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setAddCardPopupOpen(false);\n    setTrashPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setSelectedCard({});\n  }\n\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.toggleLike(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  // Корзинки\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку\n    setIsLoading(true);\n    api.deleteCard(card._id).then(item => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  // Регистрация\n  const handleRegister = _ref3 => {\n    let {\n      email,\n      password\n    } = _ref3;\n    auth.register({\n      email,\n      password\n    }).then(() => {\n      setError(false);\n      navigate(\"/sign-in\");\n    }).catch(err => {\n      console.log(err);\n      setError(true);\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  };\n\n  //Логин\n  const handleLogin = _ref4 => {\n    let {\n      email\n    } = _ref4;\n    setLoggedIn(true);\n    setUserEmail({\n      email\n    });\n  };\n\n  //Проверка токена\n  const tockenCheck = () => {\n    const jwt = localStorage.getItem(\"tocken\");\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          handleLogin();\n          navigate(\"/users/me\");\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n  useEffect(() => {\n    tockenCheck();\n  });\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(PageError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/users/me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users/me\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                userEmail: userEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                loggedIn: loggedIn,\n                element: Main,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddCardClick,\n                onEditAvatar: handleEditAvatarClick,\n                onOpenTrash: handleTrashClick,\n                onOpenImage: hendleImageClick,\n                onClose: closeAllPopups,\n                cards: cards,\n                currentUser: currentUser,\n                onCardLike: handleCardLike,\n                onCardDelete: handleCardDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n                isOpen: isProfilePopupOpen,\n                onClose: closeAllPopups,\n                onUpdateUser: handleUpdateUser,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n                isOpen: isAvatarPopupOpen,\n                onClose: closeAllPopups,\n                onUpdateAvatar: handleUpdateAvatar,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n                isOpen: isAddCardPopupOpen,\n                onClose: closeAllPopups,\n                onAddPlace: handleAddCard,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n                isOpen: isTrashPopupOpen,\n                onClose: closeAllPopups,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n                card: selectedCard,\n                onClose: closeAllPopups\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n                isOpen: isInfoToolTipOpen,\n                onClose: closeAllPopups,\n                isError: isError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WtFOT7jHxSlMq1YW9kn+RPl0Rgg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Routes","Route","Navigate","useNavigate","api","auth","CurrentUserContext","Header","Main","Footer","ImagePopup","Register","Login","InfoTooltip","ProtectedRoute","PageError","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ConfirmationPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAvatarPopupOpen","setAvatarPopupOpen","isProfilePopupOpen","setProfilePopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","isTrashPopupOpen","setTrashPopupOpen","isError","setError","isInfoToolTipOpen","setIsInfoToolTipOpen","cards","setCards","currentUser","setCurrentUser","selectedCard","setSelectedCard","isLoading","setIsLoading","loggedIn","setLoggedIn","userEmail","setUserEmail","email","navigate","Promise","all","getProfile","getInitialCards","then","_ref","card","catch","err","console","log","handleEditAvatarClick","handleUpdateAvatar","value","editAvatar","res","closeAllPopups","finally","handleEditProfileClick","handleUpdateUser","editProfile","handleAddCardClick","handleTrashClick","hendleImageClick","handleAddCard","addCard","newCard","handleInfoTooltipPositive","handleInfoTooltipNegative","_ref2","error","message","handleCardLike","isLiked","likes","some","i","_id","toggleLike","state","map","c","handleCardDelete","deleteCard","item","filter","handleRegister","_ref3","password","register","handleLogin","_ref4","tockenCheck","jwt","localStorage","getItem","getContent","Provider","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","onEditProfile","onAddPlace","onEditAvatar","onOpenTrash","onOpenImage","onClose","onCardLike","onCardDelete","isOpen","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/kelendis/Documents/GitHab/react-mesto-auth/src/components/App.js"],"sourcesContent":["import \"../index.css\";\n\nimport { useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\n\nimport { api } from \"../utils/Api.js\";\nimport * as auth from \"../utils/auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\n\nimport ImagePopup from \"./ImagePopup.js\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport PageError from \"./PageNotFound\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\n\nfunction App() {\n  //Хуки\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [isProfilePopupOpen, setProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n  const [isTrashPopupOpen, setTrashPopupOpen] = useState(false);\n  const [isError, setError] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState({ email: \"\" });\n  const navigate = useNavigate();\n\n  // Получение данных с сервера о пользователе\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()])\n      .then(([currentUser, card]) => {\n        setCurrentUser(currentUser);\n        setCards(card);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Открытие попапа автара и изменение его.\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n\n  const handleUpdateAvatar = (value) => {\n    setIsLoading(true);\n    api\n      .editAvatar(value)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //Открытие попапа изменения профиля и изменение информации в нем.\n  const handleEditProfileClick = () => {\n    setProfilePopupOpen(true);\n  };\n\n  const handleUpdateUser = (value) => {\n    setIsLoading(true);\n    api\n      .editProfile(value)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // Открытие попапа добавления карточки и добавление ее на страницу.\n  const handleAddCardClick = () => {\n    setAddCardPopupOpen(true);\n  };\n  const handleTrashClick = () => {\n    setTrashPopupOpen(true);\n  };\n  const hendleImageClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const handleAddCard = (value) => {\n    setIsLoading(true);\n    api\n      .addCard(value)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // Попап регистрации\n  function handleInfoTooltipPositive() {\n    setIsInfoToolTipOpen(true);\n  }\n\n  function handleInfoTooltipNegative({ error, message }) {\n    setIsInfoToolTipOpen(true);\n    setError(message || error);\n  }\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setAddCardPopupOpen(false);\n    setTrashPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setSelectedCard({});\n  }\n\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .toggleLike(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Корзинки\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку\n    setIsLoading(true);\n    api\n      .deleteCard(card._id)\n      .then((item) => {\n        setCards(cards.filter((item) => item._id !== card._id));\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n// Регистрация\nconst handleRegister = ({email, password}) =>{\n  auth\n      .register({ email, password })\n      .then(() => {\n        setError(false)\n        navigate(\"/sign-in\");\n      })\n      .catch((err) => {\n        console.log(err)\n        setError(true)})\n        .finally(() => {\n          setIsInfoToolTipOpen(true)\n        })\n}\n\n\n  //Логин\n  const handleLogin = ({ email }) => {\n    setLoggedIn(true);\n    setUserEmail({ email });\n  };\n\n  //Проверка токена\n  const tockenCheck = () => {\n    const jwt = localStorage.getItem(\"tocken\");\n    if (jwt) {\n      auth\n        .getContent(jwt)\n        .then((res) => {\n          if (res) {\n            handleLogin();\n            navigate(\"/users/me\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    tockenCheck();\n  });\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Routes>\n            <Route path=\"*\" element={<PageError />} />\n            <Route\n              path=\"/\"\n              element={\n                loggedIn ? (\n                  <Navigate to=\"/users/me\" />\n                ) : (\n                  <Navigate to=\"/sign-in\" replace />\n                )\n              }\n            />\n            <Route path=\"/sign-up\" element={<Register handleRegister={handleRegister} />} />\n            <Route\n              path=\"/sign-in\"\n              element={<Login handleLogin={handleLogin} />}\n            />\n            <Route\n              path=\"/users/me\"\n              element={\n                <>\n                  <Header userEmail={userEmail} />\n                  <ProtectedRoute\n                    loggedIn={loggedIn}\n                    element={Main}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddCardClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onOpenTrash={handleTrashClick}\n                    onOpenImage={hendleImageClick}\n                    onClose={closeAllPopups}\n                    cards={cards}\n                    currentUser={currentUser}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                  />\n\n                  <Footer />\n\n                  <EditProfilePopup\n                    isOpen={isProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    isLoading={isLoading}\n                  />\n\n                  <EditAvatarPopup\n                    isOpen={isAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    isLoading={isLoading}\n                  />\n\n                  <AddPlacePopup\n                    isOpen={isAddCardPopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddCard}\n                    isLoading={isLoading}\n                  />\n\n                  <ConfirmationPopup\n                    isOpen={isTrashPopupOpen}\n                    onClose={closeAllPopups}\n                    isLoading={isLoading}\n                  />\n\n                  <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n                  <InfoTooltip\n                    isOpen={isInfoToolTipOpen}\n                    onClose={closeAllPopups}\n                    isError={isError}\n                  />\n                </>\n              }\n            />\n          </Routes>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}