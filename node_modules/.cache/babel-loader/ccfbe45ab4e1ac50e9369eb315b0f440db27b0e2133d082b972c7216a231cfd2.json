{"ast":null,"code":"var _jsxFileName = \"/Users/kelendis/Documents/GitHab/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\n//import InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport PageError from \"./PageNotFound\";\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Хуки\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [isProfilePopupOpen, setProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n  const [isTrashPopupOpen, setTrashPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(true);\n\n  // Получение данных с сервера о пользователе\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()]).then(_ref => {\n      let [currentUser, card] = _ref;\n      setCurrentUser(currentUser);\n      setCards(card);\n    }).catch(err => console.log(err));\n  }, []);\n\n  //Открытие попапа автара и изменение его.\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n  const handleUpdateAvatar = value => {\n    setIsLoading(true);\n    api.editAvatar(value).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  //Открытие попапа изменения профиля и изменение информации в нем.\n  const handleEditProfileClick = () => {\n    setProfilePopupOpen(true);\n  };\n  const handleUpdateUser = value => {\n    setIsLoading(true);\n    api.editProfile(value).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // Открытие попапа добавления карточки и добавление ее на страницу.\n  const handleAddCardClick = () => {\n    setAddCardPopupOpen(true);\n  };\n  const handleTrashClick = () => {\n    setTrashPopupOpen(true);\n  };\n  const hendleImageClick = card => {\n    setSelectedCard(card);\n  };\n  const handleAddCard = value => {\n    setIsLoading(true);\n    api.addCard(value).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setAddCardPopupOpen(false);\n    setTrashPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.toggleLike(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  // Корзинки\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку\n    setIsLoading(true);\n    api.deleteCard(card._id).then(item => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err)).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(PageError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/users/me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users/me\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              element: Header\n              /*<>\n                <Header />\n                <Main\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddCardClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onOpenTrash={handleTrashClick}\n                  onOpenImage={hendleImageClick}\n                  onClose={closeAllPopups}\n                  cards={cards}\n                  currentUser={currentUser}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                />\n                <Footer />\n                 <EditProfilePopup\n                  isOpen={isProfilePopupOpen}\n                  onClose={closeAllPopups}\n                  onUpdateUser={handleUpdateUser}\n                  isLoading={isLoading}\n                />\n                 <EditAvatarPopup\n                  isOpen={isAvatarPopupOpen}\n                  onClose={closeAllPopups}\n                  onUpdateAvatar={handleUpdateAvatar}\n                  isLoading={isLoading}\n                />\n                 <AddPlacePopup\n                  isOpen={isAddCardPopupOpen}\n                  onClose={closeAllPopups}\n                  onAddPlace={handleAddCard}\n                  isLoading={isLoading}\n                />\n                 <ConfirmationPopup\n                  isOpen={isTrashPopupOpen}\n                  onClose={closeAllPopups}\n                  isLoading={isLoading}\n                />\n                 <ImagePopup\n                  card={selectedCard}\n                  onClose={closeAllPopups}\n                />\n              </>*/\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NE99NnWeFuiiB7qi+B3UsgE5sDA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","useEffect","useState","ImagePopup","Register","Login","ProtectedRoute","PageError","api","CurrentUserContext","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ConfirmationPopup","Routes","Route","Navigate","jsxDEV","_jsxDEV","App","_s","isAvatarPopupOpen","setAvatarPopupOpen","isProfilePopupOpen","setProfilePopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","isTrashPopupOpen","setTrashPopupOpen","cards","setCards","currentUser","setCurrentUser","selectedCard","setSelectedCard","isLoading","setIsLoading","loggedIn","setLoggedIn","Promise","all","getProfile","getInitialCards","then","_ref","card","catch","err","console","log","handleEditAvatarClick","handleUpdateAvatar","value","editAvatar","res","closeAllPopups","finally","handleEditProfileClick","handleUpdateUser","editProfile","handleAddCardClick","handleTrashClick","hendleImageClick","handleAddCard","addCard","newCard","handleCardLike","isLiked","likes","some","i","_id","toggleLike","state","map","c","handleCardDelete","deleteCard","item","filter","Provider","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/kelendis/Documents/GitHab/react-mesto-auth/src/components/App.js"],"sourcesContent":["import \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport { useEffect, useState } from \"react\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\n//import InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport PageError from \"./PageNotFound\";\n\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\n\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\nfunction App() {\n  //Хуки\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = useState(false);\n  const [isProfilePopupOpen, setProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = useState(false);\n  const [isTrashPopupOpen, setTrashPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(true);\n\n  // Получение данных с сервера о пользователе\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getInitialCards()])\n      .then(([currentUser, card]) => {\n        setCurrentUser(currentUser);\n        setCards(card);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Открытие попапа автара и изменение его.\n  const handleEditAvatarClick = () => {\n    setAvatarPopupOpen(true);\n  };\n\n  const handleUpdateAvatar = (value) => {\n    setIsLoading(true);\n    api\n      .editAvatar(value)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  //Открытие попапа изменения профиля и изменение информации в нем.\n  const handleEditProfileClick = () => {\n    setProfilePopupOpen(true);\n  };\n\n  const handleUpdateUser = (value) => {\n    setIsLoading(true);\n    api\n      .editProfile(value)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // Открытие попапа добавления карточки и добавление ее на страницу.\n  const handleAddCardClick = () => {\n    setAddCardPopupOpen(true);\n  };\n  const handleTrashClick = () => {\n    setTrashPopupOpen(true);\n  };\n  const hendleImageClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const handleAddCard = (value) => {\n    setIsLoading(true);\n    api\n      .addCard(value)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setAddCardPopupOpen(false);\n    setTrashPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  // Лайки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .toggleLike(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // Корзинки\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и удаляем карточку\n    setIsLoading(true);\n    api\n      .deleteCard(card._id)\n      .then((item) => {\n        setCards(cards.filter((item) => item._id !== card._id));\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Routes>\n            <Route path=\"*\" element={<PageError />} />\n            <Route\n              path=\"/\"\n              element={\n                loggedIn ? (\n                  <Navigate to=\"/users/me\" />\n                ) : (\n                  <Navigate to=\"/sign-in\" replace />\n                )\n              }\n            />\n            <Route path=\"/sign-up\" element={<Register />} />\n            <Route path=\"/sign-in\" element={<Login />} />\n            <Route\n              path=\"/users/me\"\n              element={\n                <ProtectedRoute loggedIn={loggedIn}\n                  element={Header\n                    /*<>\n                      <Header />\n                      <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddCardClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onOpenTrash={handleTrashClick}\n                        onOpenImage={hendleImageClick}\n                        onClose={closeAllPopups}\n                        cards={cards}\n                        currentUser={currentUser}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                      />\n                      <Footer />\n\n                      <EditProfilePopup\n                        isOpen={isProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateUser={handleUpdateUser}\n                        isLoading={isLoading}\n                      />\n\n                      <EditAvatarPopup\n                        isOpen={isAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                        isLoading={isLoading}\n                      />\n\n                      <AddPlacePopup\n                        isOpen={isAddCardPopupOpen}\n                        onClose={closeAllPopups}\n                        onAddPlace={handleAddCard}\n                        isLoading={isLoading}\n                      />\n\n                      <ConfirmationPopup\n                        isOpen={isTrashPopupOpen}\n                        onClose={closeAllPopups}\n                        isLoading={isLoading}\n                      />\n\n                      <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                      />\n                    </>*/\n                  }\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}